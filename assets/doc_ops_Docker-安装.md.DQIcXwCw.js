import{_ as a,c as e,o,ag as t}from"./chunks/framework.DPDPlp3K.js";const k=JSON.parse('{"title":"docker for windows 安装","description":"","frontmatter":{},"headers":[],"relativePath":"doc/ops/Docker-安装.md","filePath":"doc/ops/Docker-安装.md"}'),n={name:"doc/ops/Docker-安装.md"};function i(l,s,p,r,c,d){return o(),e("div",null,s[0]||(s[0]=[t(`<h1 id="docker-for-windows-安装" tabindex="-1">docker for windows 安装 <a class="header-anchor" href="#docker-for-windows-安装" aria-label="Permalink to &quot;docker for windows 安装&quot;">​</a></h1><h2 id="_1-开启windows服务" tabindex="-1">1.开启windows服务: <a class="header-anchor" href="#_1-开启windows服务" aria-label="Permalink to &quot;1.开启windows服务:&quot;">​</a></h2><ul><li>适用于linux的windows子系统</li><li>虚拟机平台</li></ul><h2 id="_2-安装更新wsl2的更新包-可选" tabindex="-1">2. 安装更新wsl2的更新包(可选) <a class="header-anchor" href="#_2-安装更新wsl2的更新包-可选" aria-label="Permalink to &quot;2. 安装更新wsl2的更新包(可选)&quot;">​</a></h2><blockquote><p><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" target="_blank" rel="noreferrer">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</a></p></blockquote><h2 id="_3-正常安装docker-for-windows-即可" tabindex="-1">3.正常安装docker for windows 即可 <a class="header-anchor" href="#_3-正常安装docker-for-windows-即可" aria-label="Permalink to &quot;3.正常安装docker for windows 即可&quot;">​</a></h2><h2 id="_4-k8s" tabindex="-1">4. k8s <a class="header-anchor" href="#_4-k8s" aria-label="Permalink to &quot;4. k8s&quot;">​</a></h2><p>在docker-设置-kubernetes中,勾选enable kubernetes和show system containers</p><p>点击(由于google的原因开启过程中会一直处于start,所以可以使用阿里镜像)</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://hub.fastgit.org/AliyunContainerService/k8s-for-docker-desktop.git</span></span></code></pre></div><p>根目录执行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">load_images.ps1</span></span></code></pre></div><p>执行完成可见k8s成功启动,接下来配置控制台</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.4/aio/deploy/recommended.yaml</span></span></code></pre></div><p>检查 kubernetes-dashboard 应用状态并开启api server 访问代理</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl get pod -n kubernetes-dashboard</span></span>
<span class="line"><span>kubectl proxy</span></span></code></pre></div><p>访问控制台:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/</span></span></code></pre></div><p>生成token:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk &#39;{print $1}&#39;)</span></span></code></pre></div><p>复制最后生成的token,即可完成登录</p><h1 id="docker-for-centos8-安装" tabindex="-1">docker for centos8 安装 <a class="header-anchor" href="#docker-for-centos8-安装" aria-label="Permalink to &quot;docker for centos8 安装&quot;">​</a></h1><h2 id="yum" tabindex="-1">yum <a class="header-anchor" href="#yum" aria-label="Permalink to &quot;yum&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo yum install -y yum-utils</span></span>
<span class="line"><span></span></span>
<span class="line"><span>yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#centos7</span></span>
<span class="line"><span>yum makecache fast</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#centos8</span></span>
<span class="line"><span>yum makecache</span></span>
<span class="line"><span></span></span>
<span class="line"><span>yum -y install docker-ce docker-ce-cli containerd.io</span></span></code></pre></div><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><blockquote><p>sudo systemctl start docker</p></blockquote><h2 id="修改镜像" tabindex="-1">修改镜像 <a class="header-anchor" href="#修改镜像" aria-label="Permalink to &quot;修改镜像&quot;">​</a></h2><blockquote><p>vi /etc/docker/daemon.json</p></blockquote><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;registry-mirrors&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://2qtk1jto.mirror.aliyuncs.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="重启" tabindex="-1">重启 <a class="header-anchor" href="#重启" aria-label="Permalink to &quot;重启&quot;">​</a></h2><blockquote><p>systemctl daemon-reload</p></blockquote><blockquote><p>systemctl restart docker.service</p></blockquote><h2 id="docker-compose" tabindex="-1">docker compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;docker compose&quot;">​</a></h2><p><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noreferrer">https://docs.docker.com/compose/install/</a></p><blockquote><p>sudo curl -L &quot;<a href="https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$" target="_blank" rel="noreferrer">https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$</a>(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</p></blockquote><blockquote><p>sudo chmod +x /usr/local/bin/docker-compose</p></blockquote>`,36)]))}const u=a(n,[["render",i]]);export{k as __pageData,u as default};
