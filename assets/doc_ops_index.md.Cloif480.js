import{_ as i,c as s,o as l,ag as e}from"./chunks/framework.DPDPlp3K.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc/ops/index.md","filePath":"doc/ops/index.md"}'),t={name:"doc/ops/index.md"};function p(o,a,n,h,r,c){return l(),s("div",null,a[0]||(a[0]=[e(`<h2 id="性能指标" tabindex="-1">性能指标 <a class="header-anchor" href="#性能指标" aria-label="Permalink to &quot;性能指标&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看pid</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pidof</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最大句柄数</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /porc/{pid}/limits</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Max open files            1048576              1048576              files     </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 当前打开文件数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /proc/{pid}/fd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre></div><h2 id="磁盘" tabindex="-1">磁盘 <a class="header-anchor" href="#磁盘" aria-label="Permalink to &quot;磁盘&quot;">​</a></h2><ul><li><p>查看磁盘占用</p><blockquote><p>df -Th</p></blockquote></li><li><p>查看磁盘剩余空间</p><blockquote><p>df -h</p></blockquote></li></ul><h2 id="清理" tabindex="-1">清理 <a class="header-anchor" href="#清理" aria-label="Permalink to &quot;清理&quot;">​</a></h2><ul><li>清理系统日志文件 <blockquote><p>sudo journalctl --vacuum-size=100M</p></blockquote></li><li>清理临时文件 <blockquote><p>sudo rm -rf /tmp/*</p></blockquote></li><li>删除无用的软件包和依赖项 <blockquote><p>sudo yum autoremove</p></blockquote></li><li>清理Yum缓存： <blockquote><p>sudo yum clean all</p></blockquote></li></ul><h2 id="ssh" tabindex="-1">SSH <a class="header-anchor" href="#ssh" aria-label="Permalink to &quot;SSH&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@192.168.1.1:/path/remote/file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/loacl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@192.168.8.80:/home/gitlab-runner/tmp/vte/jars</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/loacl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-port=17000/tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permanent</span></span></code></pre></div><h2 id="根据pid查找进程执行目录信息" tabindex="-1">根据pid查找进程执行目录信息 <a class="header-anchor" href="#根据pid查找进程执行目录信息" aria-label="Permalink to &quot;根据pid查找进程执行目录信息&quot;">​</a></h2><blockquote><p>ps -aux|grep -v grep |grep 12421</p></blockquote><h2 id="防火墙" tabindex="-1">防火墙 <a class="header-anchor" href="#防火墙" aria-label="Permalink to &quot;防火墙&quot;">​</a></h2><ul><li><p>安装</p><blockquote><p>yum install firewalld firewalld-config</p></blockquote></li><li><p>添加白名单</p><blockquote><p>firewall-cmd --zone=public --add-port=80/tcp --permanent</p></blockquote></li><li><p>查看白名单</p><blockquote><p>firewall-cmd --permanent --list-port</p></blockquote></li><li><p>重启</p><blockquote><p>firewall-cmd --reload 或者 service firewalld restart</p></blockquote></li></ul><h2 id="网络" tabindex="-1">网络 <a class="header-anchor" href="#网络" aria-label="Permalink to &quot;网络&quot;">​</a></h2><blockquote><p>lsof -i:8080</p></blockquote><blockquote><p>netstat -tuln | grep 8080</p></blockquote><h2 id="locate" tabindex="-1">locate <a class="header-anchor" href="#locate" aria-label="Permalink to &quot;locate&quot;">​</a></h2><p>常用的查找文件的命令find，但find是读盘搜索，效率较低。 当系统刚刚建立时，或者新增、删除文件时，mlocate的数据库文件并不能同步更新，需要使用root用户手动执行updatedb命令进行更新。</p><blockquote><p>sudo -i updatedb</p></blockquote><ol><li><p>查找包含passwd的文件。</p><blockquote><p>locate passwd</p></blockquote></li><li><p>精确查找名叫passwd的文件。</p><blockquote><p>locate -b &#39;\\passwd&#39;</p></blockquote></li><li><p>查找以passwd结尾的文件。</p><blockquote><p>locate &#39;*passwd&#39;</p></blockquote></li></ol><h2 id="find" tabindex="-1">find <a class="header-anchor" href="#find" aria-label="Permalink to &quot;find&quot;">​</a></h2><blockquote><p>find / -name demo</p></blockquote><p>找出 / 目录下 名字包含 demo的文件</p><h2 id="yum" tabindex="-1">yum <a class="header-anchor" href="#yum" aria-label="Permalink to &quot;yum&quot;">​</a></h2><blockquote><p>yum install *.rpm //安装某个rpm软件</p></blockquote><blockquote><p>yum install java-1.8.0-openjdk* -y</p></blockquote><h2 id="rpm" tabindex="-1">rpm <a class="header-anchor" href="#rpm" aria-label="Permalink to &quot;rpm&quot;">​</a></h2><blockquote><p>rpm -qa|grep dremio // 查找包信息</p></blockquote><blockquote><p>rpm -e *.noarch //移除软件</p></blockquote><h2 id="查找环境变量-which" tabindex="-1">查找环境变量 which <a class="header-anchor" href="#查找环境变量-which" aria-label="Permalink to &quot;查找环境变量 which&quot;">​</a></h2><blockquote><p>which python</p></blockquote>`,30)]))}const u=i(t,[["render",p]]);export{k as __pageData,u as default};
