import{_ as a,c as i,o as n,ag as e}from"./chunks/framework.BDwTZuFy.js";const c=JSON.parse('{"title":"Cube.js","description":"","frontmatter":{},"headers":[],"relativePath":"doc/js/Cube.js.md","filePath":"doc/js/Cube.js.md"}'),p={name:"doc/js/Cube.js.md"};function l(t,s,h,k,r,d){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="cube-js" tabindex="-1">Cube.js <a class="header-anchor" href="#cube-js" aria-label="Permalink to &quot;Cube.js&quot;">​</a></h1><blockquote><p><a href="https://cube.dev/docs/" target="_blank" rel="noreferrer">https://cube.dev/docs/</a></p></blockquote><p>根据schema动态生成SQL以及对应的图表统计信息</p><h2 id="多数据源" tabindex="-1">多数据源 <a class="header-anchor" href="#多数据源" aria-label="Permalink to &quot;多数据源&quot;">​</a></h2><p>支持开箱即用</p><p>连接Dremio提供的数据湖功能实现多数据源.</p><h2 id="多租户" tabindex="-1">多租户 <a class="header-anchor" href="#多租户" aria-label="Permalink to &quot;多租户&quot;">​</a></h2><p>不同的用户拥有不同的数据,比如每个用户都拥有某个库下自己的schema</p><h1 id="cube-js-demo" tabindex="-1">Cube.js Demo <a class="header-anchor" href="#cube-js-demo" aria-label="Permalink to &quot;Cube.js Demo&quot;">​</a></h1><p>node环境</p><blockquote><p>$ npx cubejs-cli create hello-world -d mysql</p></blockquote><p>修改.env文件</p><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CUBEJS_DB_HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CUBEJS_DB_NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=zong</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CUBEJS_DB_USER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CUBEJS_DB_PASS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=123456</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CUBEJS_WEB_SOCKETS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CUBEJS_DEV_MODE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#开发者模式可以停用安全认证和缓存</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CUBEJS_DB_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=mysql</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CUBEJS_API_SECRET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=7231de6ada597c0aa66bbac5dcee0f2c75e3ccde30395c5001efbb8b0f2ceed41b242bdc0024fc56cb30861fe8ffdd45373387f667ec2a084e24341001f4bca9</span></span></code></pre></div><p>启动</p><blockquote><p>npm run dev</p></blockquote><h1 id="cube-schema" tabindex="-1">Cube Schema <a class="header-anchor" href="#cube-schema" aria-label="Permalink to &quot;Cube Schema&quot;">​</a></h1><h2 id="_1-cube" tabindex="-1">1. cube <a class="header-anchor" href="#_1-cube" aria-label="Permalink to &quot;1. cube&quot;">​</a></h2><p>对某个表/实体进行管理</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cube</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`User\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sql: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`SELECT * FROM zong.user\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  measures:{},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dimensions:{},</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//维度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  segments:{},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  preAggregations:{},</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//预聚集</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dataSource:{},</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//数据源</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><h2 id="_2-measures" tabindex="-1">2. measures <a class="header-anchor" href="#_2-measures" aria-label="Permalink to &quot;2. measures&quot;">​</a></h2><p>某种聚合操作,比如count/max</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> measures</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`count\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      drillMembers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [id, name]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    doubleCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`number\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} * 2\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`number\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`max(id)\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><h3 id="measures-types" tabindex="-1">Measures Types <a class="header-anchor" href="#measures-types" aria-label="Permalink to &quot;Measures Types&quot;">​</a></h3><p>number/count/countDistinct/countDistinctApprox/sum/avg/mix/max/runningTotal</p><h3 id="measures-formats" tabindex="-1">Measures Formats <a class="header-anchor" href="#measures-formats" aria-label="Permalink to &quot;Measures Formats&quot;">​</a></h3><p>percent/curreny(货币)/</p><h2 id="_3-dimensions" tabindex="-1">3. dimensions <a class="header-anchor" href="#_3-dimensions" aria-label="Permalink to &quot;3. dimensions&quot;">​</a></h2><p>数据列</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dimensions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`id\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`number\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      primaryKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    createTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`create_time\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`time\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    updateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`update_time\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`time\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><h3 id="dimensions-types" tabindex="-1">Dimensions Types <a class="header-anchor" href="#dimensions-types" aria-label="Permalink to &quot;Dimensions Types&quot;">​</a></h3><p>time/string/number/boolean/geo(经纬度)</p><h3 id="dimensions-formats" tabindex="-1">Dimensions Formats <a class="header-anchor" href="#dimensions-formats" aria-label="Permalink to &quot;Dimensions Formats&quot;">​</a></h3><p>imageUrl/id/link/currencypercent</p><h2 id="_4-joins" tabindex="-1">4. joins <a class="header-anchor" href="#_4-joins" aria-label="Permalink to &quot;4. joins&quot;">​</a></h2><p>连接,  relationship: <code>belongsTo</code> || <code>hasMany</code> || <code>hasOne</code></p><blockquote><p><code>user</code> ---- <code>hasMany</code>----&gt; <code>role</code></p></blockquote><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  joins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        relationship</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`hasMany\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">User</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}.id = \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Role</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}.uid\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><p>在playground中使用,比如勾选</p><blockquote><p>MEASURES :User Count DIMENSIONS: Role Name</p></blockquote><p>生成的SQL:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \` role \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \` role__name \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">distinct</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \` user \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.id) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\` user__count \`</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  zong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \` user \`</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  LEFT JOIN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> zong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">role</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \` role \`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \` user \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \` role \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uid</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DESC</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LIMIT</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  10000</span></span></code></pre></div><h2 id="_5-segments" tabindex="-1">5. segments <a class="header-anchor" href="#_5-segments" aria-label="Permalink to &quot;5. segments&quot;">​</a></h2><p>它是预定义的过滤器,功能和Filter类似,在生成的SQL中可见 where语句 添加的条件</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  segments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    sfUsers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CUBE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}.id = &#39;2&#39;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span></code></pre></div><p>Filter在页面中勾选对应的DIMENSIONS或MEASURES设置 比较,其结果可以与segments实现同样的结果.</p><p>由于segments是预定义的过滤器,适合用在复杂查询中,为所有用户预置复杂的查询条件</p><h2 id="_6-preaggregations" tabindex="-1">6. preAggregations <a class="header-anchor" href="#_6-preaggregations" aria-label="Permalink to &quot;6. preAggregations&quot;">​</a></h2><p>预聚集:</p><p>要求cube拥有对数据源的写入权限,Cube.js首先在源数据库中将预聚合构建为表，然后将其导出到预聚合存储中.</p><p>比如</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  preAggregations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      sqlAlias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`original\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`originalSql\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span></code></pre></div><p>构建成功后,可见数据库多了一个库dev_pre_aggregations,里面有cube生成的表,通过预聚集的特点,实现快速查询的目的.</p><p>使用外部预聚合需要安装driver:</p><p>yarn add @cubejs-backend/cubestore-driver --dev</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`javascript</span></span>
<span class="line"><span>  preAggregations: {</span></span>
<span class="line"><span>    categoryAndDate: {</span></span>
<span class="line"><span>      type: \`rollup\`,</span></span>
<span class="line"><span>      external: true,</span></span>
<span class="line"><span>      measureReferences: [Orders.count, revenue],</span></span>
<span class="line"><span>      dimensionReferences: [category],</span></span>
<span class="line"><span>      timeDimensionReference: createdAt,</span></span>
<span class="line"><span>      granularity: \`day\`,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>  },</span></span></code></pre></div><h2 id="_7-contexts" tabindex="-1">7. contexts <a class="header-anchor" href="#_7-contexts" aria-label="Permalink to &quot;7. contexts&quot;">​</a></h2><p>cube集合</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>context(\`Sales\`, {</span></span>
<span class="line"><span>  contextMembers: [Users, Deals, Meetings]</span></span>
<span class="line"><span>});</span></span></code></pre></div><h2 id="_8-execution-environment" tabindex="-1">8. Execution Environment <a class="header-anchor" href="#_8-execution-environment" aria-label="Permalink to &quot;8. Execution Environment&quot;">​</a></h2><ul><li></li></ul><p>\${CUBE} 可作为当前cube的指向,类似this</p><ul><li></li></ul><p>ratio 可作为数据集的外部定义</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const measureRatioDefinition = {</span></span>
<span class="line"><span>  sql: (CUBE, count) =&gt; \`sum(\${CUBE}.amount) / \${count}\`,</span></span>
<span class="line"><span>  type: \`number\`,</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span></span></span>
<span class="line"><span>cube(\`Users\`, {</span></span>
<span class="line"><span>  // ...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  measures: {</span></span>
<span class="line"><span>    count: {</span></span>
<span class="line"><span>      type: \`count\`,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    ratio: measureRatioDefinition,</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>});</span></span></code></pre></div>`,64)]))}const o=a(p,[["render",l]]);export{c as __pageData,o as default};
