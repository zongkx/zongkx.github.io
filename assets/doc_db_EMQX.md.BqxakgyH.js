import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.DPDPlp3K.js";const e="/assets/img.C_itXlpu.png",l="/assets/img1.CTBgazj-.png",p="/assets/img2.BCoSSZsj.png",m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc/db/EMQX.md","filePath":"doc/db/EMQX.md"}'),h={name:"doc/db/EMQX.md"};function k(o,s,E,r,d,c){return n(),a("div",null,s[0]||(s[0]=[t(`<h2 id="日志追踪" tabindex="-1">日志追踪 <a class="header-anchor" href="#日志追踪" aria-label="Permalink to &quot;日志追踪&quot;">​</a></h2><p>进入容器后输入</p><blockquote><p>emqx_ctl trace start client clientid log/my_client.log</p></blockquote><p>即可在/opt/emqx/log中查看追踪日志</p><h2 id="deploy" tabindex="-1">deploy <a class="header-anchor" href="#deploy" aria-label="Permalink to &quot;deploy&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2.2&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  emqx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">emqx/emqx:4.3.8</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1883:1883</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8081:8081</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8083:8083</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8883:8883</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8084:8084</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">18083:18083</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Asia/Shanghai</span></span></code></pre></div><h2 id="emqx的客户端上下线-webhook" tabindex="-1">EMQX的客户端上下线 webhook <a class="header-anchor" href="#emqx的客户端上下线-webhook" aria-label="Permalink to &quot;EMQX的客户端上下线 webhook&quot;">​</a></h2><ol><li><p>进入EMQX web后台 ,启用 WEB_HOOK插件 <img src="`+e+'" alt="img.png"></p></li><li><p>进入左侧资源页面新增资源,选择Webhook ,并填写 URL</p><blockquote><p>http://{ip}:{port}/emqx/webhook <img src="'+l+'" alt="img1.png"></p></blockquote></li><li><p>进入左侧规则页面新增两条规则(上线/下线),sql分别对应下文所写, sql配置完成之后再关联到2中添加的规则</p><p><img src="'+p+'" alt="img.png"></p><p>上线规则:</p><blockquote><p>SELECT * FROM &quot;$events/client_connected&quot;</p></blockquote><p>下线规则:</p><blockquote><p>SELECT * FROM &quot;$events/client_disconnected&quot;</p></blockquote></li></ol>',8)]))}const y=i(h,[["render",k]]);export{m as __pageData,y as default};
